/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/reports/route";
exports.ids = ["app/api/reports/route"];
exports.modules = {

/***/ "(rsc)/./app/api/reports/route.ts":
/*!**********************************!*\
  !*** ./app/api/reports/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/jwt */ \"(rsc)/./node_modules/next-auth/jwt/index.js\");\n/* harmony import */ var next_auth_jwt__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/prisma */ \"(rsc)/./lib/prisma.ts\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\nasync function GET(request) {\n    try {\n        const token = await (0,next_auth_jwt__WEBPACK_IMPORTED_MODULE_1__.getToken)({\n            req: request\n        });\n        if (!token) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'No autorizado'\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const startDate = searchParams.get('startDate');\n        const endDate = searchParams.get('endDate');\n        const projectId = searchParams.get('projectId');\n        const userId = searchParams.get('userId');\n        const stage = searchParams.get('stage');\n        const status = searchParams.get('status');\n        // Validar fechas\n        const start = startDate ? new Date(startDate) : new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\n        const end = endDate ? new Date(endDate) : new Date();\n        if (start > end) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                message: 'La fecha de inicio debe ser anterior a la fecha de fin'\n            }, {\n                status: 400\n            });\n        }\n        // Construir filtros base\n        const baseFilters = {\n            createdAt: {\n                gte: start,\n                lte: end\n            }\n        };\n        // Filtros adicionales\n        if (projectId) baseFilters.projectId = projectId;\n        if (stage) baseFilters.stage = stage;\n        if (status) baseFilters.status = status;\n        // Si es empleado, solo puede ver sus propias tareas\n        if (token.role === _prisma_client__WEBPACK_IMPORTED_MODULE_3__.Role.EMPLOYEE) {\n            baseFilters.employeeId = token.sub;\n        } else if (userId) {\n            baseFilters.employeeId = userId;\n        }\n        // 1. Productividad diaria\n        const dailyProductivity = await getDailyProductivity(start, end, baseFilters);\n        // 2. Tareas por etapa\n        const tasksByStage = await getTasksByStage(baseFilters);\n        // 3. Tareas por estado\n        const tasksByStatus = await getTasksByStatus(baseFilters);\n        // 4. Productividad por usuario\n        const userProductivity = await getUserProductivity(start, end, baseFilters, token.role);\n        // 5. Progreso de proyectos\n        const projectProgress = await getProjectProgress(baseFilters, token.role);\n        // 6. Uso de escáneres\n        const scannerUsage = await getScannerUsage(start, end, baseFilters);\n        // 7. Tendencias mensuales\n        const monthlyTrends = await getMonthlyTrends(start, end, baseFilters);\n        const reportData = {\n            dailyProductivity,\n            tasksByStage,\n            tasksByStatus,\n            userProductivity,\n            projectProgress,\n            scannerUsage,\n            monthlyTrends\n        };\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(reportData);\n    } catch (error) {\n        console.error('Error al generar reporte:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            message: 'Error interno del servidor'\n        }, {\n            status: 500\n        });\n    }\n}\n// Función para obtener productividad diaria\nasync function getDailyProductivity(start, end, filters) {\n    const tasks = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.findMany({\n        where: {\n            ...filters,\n            status: 'COMPLETED'\n        },\n        select: {\n            createdAt: true,\n            documentsProcessed: true,\n            startTime: true,\n            endTime: true\n        }\n    });\n    // Agrupar por día\n    const dailyData = {};\n    // Inicializar todos los días en el rango\n    const currentDate = new Date(start);\n    while(currentDate <= end){\n        const dateKey = currentDate.toISOString().split('T')[0];\n        dailyData[dateKey] = {\n            tasks: 0,\n            pages: 0,\n            hours: 0\n        };\n        currentDate.setDate(currentDate.getDate() + 1);\n    }\n    // Procesar tareas\n    tasks.forEach((task)=>{\n        const dateKey = task.createdAt.toISOString().split('T')[0];\n        if (dailyData[dateKey]) {\n            dailyData[dateKey].tasks += 1;\n            dailyData[dateKey].pages += task.documentsProcessed || 0;\n            if (task.startTime && task.endTime) {\n                const hours = (task.endTime.getTime() - task.startTime.getTime()) / (1000 * 60 * 60);\n                dailyData[dateKey].hours += hours;\n            }\n        }\n    });\n    return Object.entries(dailyData).map(([date, data])=>({\n            date,\n            ...data\n        })).sort((a, b)=>a.date.localeCompare(b.date));\n}\n// Función para obtener tareas por etapa\nasync function getTasksByStage(filters) {\n    const stages = [\n        'RECEPTION',\n        'PREPARATION',\n        'SCANNING',\n        'INDEXING',\n        'QUALITY_CONTROL',\n        'REASSEMBLY',\n        'DELIVERY'\n    ];\n    const stageCounts = await Promise.all(stages.map(async (stage)=>{\n        const count = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.count({\n            where: {\n                ...filters,\n                stage: stage\n            }\n        });\n        return {\n            stage,\n            count\n        };\n    }));\n    const totalTasks = stageCounts.reduce((sum, item)=>sum + item.count, 0);\n    return stageCounts.map((item)=>({\n            ...item,\n            percentage: totalTasks > 0 ? item.count / totalTasks * 100 : 0\n        }));\n}\n// Función para obtener tareas por estado\nasync function getTasksByStatus(filters) {\n    const statuses = [\n        'IN_PROGRESS',\n        'COMPLETED',\n        'PAUSED'\n    ];\n    const statusCounts = await Promise.all(statuses.map(async (status)=>{\n        const count = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.count({\n            where: {\n                ...filters,\n                status: status\n            }\n        });\n        return {\n            status,\n            count\n        };\n    }));\n    const totalTasks = statusCounts.reduce((sum, item)=>sum + item.count, 0);\n    return statusCounts.map((item)=>({\n            ...item,\n            percentage: totalTasks > 0 ? item.count / totalTasks * 100 : 0\n        }));\n}\n// Función para obtener productividad por usuario\nasync function getUserProductivity(start, end, filters, userRole) {\n    // Si es empleado, solo mostrar sus propios datos\n    const userFilter = userRole === _prisma_client__WEBPACK_IMPORTED_MODULE_3__.Role.EMPLOYEE ? {\n        id: filters.employeeId\n    } : {};\n    const users = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findMany({\n        where: {\n            ...userFilter,\n            role: userRole === _prisma_client__WEBPACK_IMPORTED_MODULE_3__.Role.EMPLOYEE ? _prisma_client__WEBPACK_IMPORTED_MODULE_3__.Role.EMPLOYEE : undefined\n        },\n        select: {\n            id: true,\n            name: true,\n            taskRecords: {\n                where: {\n                    createdAt: {\n                        gte: start,\n                        lte: end\n                    },\n                    status: _prisma_client__WEBPACK_IMPORTED_MODULE_3__.TaskStatus.COMPLETED\n                },\n                select: {\n                    documentsProcessed: true,\n                    startTime: true,\n                    endTime: true\n                }\n            }\n        }\n    });\n    return users.map((user)=>{\n        const totalTasks = user.taskRecords.length;\n        const totalPages = user.taskRecords.reduce((sum, task)=>sum + (task.documentsProcessed || 0), 0);\n        let totalHours = 0;\n        user.taskRecords.forEach((task)=>{\n            if (task.startTime && task.endTime) {\n                totalHours += (task.endTime.getTime() - task.startTime.getTime()) / (1000 * 60 * 60);\n            }\n        });\n        const avgPagesPerHour = totalHours > 0 ? totalPages / totalHours : 0;\n        return {\n            userId: user.id,\n            userName: user.name,\n            totalTasks,\n            totalPages,\n            totalHours,\n            avgPagesPerHour\n        };\n    }).filter((user)=>user.totalTasks > 0);\n}\n// Función para obtener progreso de proyectos\nasync function getProjectProgress(filters, userRole) {\n    const projectFilter = {};\n    // Si hay filtro de proyecto específico\n    if (filters.projectId) {\n        projectFilter.id = filters.projectId;\n    }\n    const projects = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.project.findMany({\n        where: projectFilter,\n        select: {\n            id: true,\n            name: true,\n            clientName: true,\n            taskRecords: {\n                where: userRole === _prisma_client__WEBPACK_IMPORTED_MODULE_3__.Role.EMPLOYEE ? {\n                    employeeId: filters.userId\n                } : {},\n                select: {\n                    status: true,\n                    documentsProcessed: true,\n                    startTime: true,\n                    endTime: true\n                }\n            }\n        }\n    });\n    return projects.map((project)=>{\n        const totalTasks = project.taskRecords.length;\n        const completedTasks = project.taskRecords.filter((task)=>task.status === _prisma_client__WEBPACK_IMPORTED_MODULE_3__.TaskStatus.COMPLETED).length;\n        const progress = totalTasks > 0 ? completedTasks / totalTasks * 100 : 0;\n        const totalPages = project.taskRecords.reduce((sum, task)=>sum + (task.documentsProcessed || 0), 0);\n        let actualHours = 0;\n        project.taskRecords.forEach((task)=>{\n            if (task.startTime && task.endTime) {\n                actualHours += (task.endTime.getTime() - task.startTime.getTime()) / (1000 * 60 * 60);\n            }\n        });\n        return {\n            projectId: project.id,\n            projectName: project.name,\n            clientName: project.clientName,\n            totalTasks,\n            completedTasks,\n            progress,\n            totalPages,\n            estimatedHours: 0,\n            actualHours\n        };\n    }).filter((project)=>project.totalTasks > 0);\n}\n// Función para obtener uso de escáneres\nasync function getScannerUsage(start, end, filters) {\n    const scanners = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.scanner.findMany({\n        select: {\n            id: true,\n            name: true,\n            taskRecords: {\n                where: {\n                    createdAt: {\n                        gte: start,\n                        lte: end\n                    },\n                    status: _prisma_client__WEBPACK_IMPORTED_MODULE_3__.TaskStatus.COMPLETED\n                },\n                select: {\n                    documentsProcessed: true,\n                    startTime: true,\n                    endTime: true\n                }\n            }\n        }\n    });\n    const totalHoursInPeriod = (end.getTime() - start.getTime()) / (1000 * 60 * 60);\n    return scanners.map((scanner)=>{\n        const totalTasks = scanner.taskRecords.length;\n        const totalPages = scanner.taskRecords.reduce((sum, task)=>sum + (task.documentsProcessed || 0), 0);\n        let totalHours = 0;\n        scanner.taskRecords.forEach((task)=>{\n            if (task.startTime && task.endTime) {\n                totalHours += (task.endTime.getTime() - task.startTime.getTime()) / (1000 * 60 * 60);\n            }\n        });\n        const utilizationRate = totalHoursInPeriod > 0 ? totalHours / totalHoursInPeriod * 100 : 0;\n        return {\n            scannerId: scanner.id,\n            scannerName: scanner.name,\n            totalTasks,\n            totalPages,\n            totalHours,\n            utilizationRate\n        };\n    }).filter((scanner)=>scanner.totalTasks > 0);\n}\n// Función para obtener tendencias mensuales\nasync function getMonthlyTrends(start, end, filters) {\n    // Obtener datos de los últimos 12 meses\n    const monthsBack = 12;\n    const trends = [];\n    for(let i = monthsBack - 1; i >= 0; i--){\n        const monthStart = new Date();\n        monthStart.setMonth(monthStart.getMonth() - i);\n        monthStart.setDate(1);\n        monthStart.setHours(0, 0, 0, 0);\n        const monthEnd = new Date(monthStart);\n        monthEnd.setMonth(monthEnd.getMonth() + 1);\n        monthEnd.setDate(0);\n        monthEnd.setHours(23, 59, 59, 999);\n        const monthName = monthStart.toLocaleDateString('es-ES', {\n            month: 'short',\n            year: 'numeric'\n        });\n        // Proyectos creados en el mes\n        const projects = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.project.count({\n            where: {\n                createdAt: {\n                    gte: monthStart,\n                    lte: monthEnd\n                }\n            }\n        });\n        // Tareas completadas en el mes\n        const tasks = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.count({\n            where: {\n                createdAt: {\n                    gte: monthStart,\n                    lte: monthEnd\n                },\n                status: 'COMPLETED'\n            }\n        });\n        // Páginas procesadas en el mes\n        const pagesResult = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.aggregate({\n            where: {\n                createdAt: {\n                    gte: monthStart,\n                    lte: monthEnd\n                },\n                status: 'COMPLETED'\n            },\n            _sum: {\n                documentsProcessed: true\n            }\n        });\n        // Horas trabajadas en el mes\n        const completedTasks = await _lib_prisma__WEBPACK_IMPORTED_MODULE_2__.prisma.taskRecord.findMany({\n            where: {\n                createdAt: {\n                    gte: monthStart,\n                    lte: monthEnd\n                },\n                status: 'COMPLETED'\n            },\n            select: {\n                startTime: true,\n                endTime: true\n            }\n        });\n        let hours = 0;\n        completedTasks.forEach((task)=>{\n            if (task.startTime && task.endTime) {\n                hours += (task.endTime.getTime() - task.startTime.getTime()) / (1000 * 60 * 60);\n            }\n        });\n        trends.push({\n            month: monthName,\n            projects,\n            tasks,\n            pages: pagesResult._sum.documentsProcessed || 0,\n            hours\n        });\n    }\n    return trends;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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K0I7UUFDL0IsTUFBTTJILGNBQWMsTUFBTXBJLCtDQUFNQSxDQUFDa0QsVUFBVSxDQUFDbUYsU0FBUyxDQUFDO1lBQ3BEakYsT0FBTztnQkFDTDVCLFdBQVc7b0JBQ1RDLEtBQUtrRztvQkFDTGpHLEtBQUtxRztnQkFDUDtnQkFDQXRILFFBQVE7WUFDVjtZQUNBNkgsTUFBTTtnQkFDSmhGLG9CQUFvQjtZQUN0QjtRQUNGO1FBRUEsNkJBQTZCO1FBQzdCLE1BQU11RCxpQkFBaUIsTUFBTTdHLCtDQUFNQSxDQUFDa0QsVUFBVSxDQUFDQyxRQUFRLENBQUM7WUFDdERDLE9BQU87Z0JBQ0w1QixXQUFXO29CQUNUQyxLQUFLa0c7b0JBQ0xqRyxLQUFLcUc7Z0JBQ1A7Z0JBQ0F0SCxRQUFRO1lBQ1Y7WUFDQTRDLFFBQVE7Z0JBQ05FLFdBQVc7Z0JBQ1hDLFNBQVM7WUFDWDtRQUNGO1FBRUEsSUFBSU8sUUFBUTtRQUNaOEMsZUFBZTNDLE9BQU8sQ0FBQ0MsQ0FBQUE7WUFDckIsSUFBSUEsS0FBS1osU0FBUyxJQUFJWSxLQUFLWCxPQUFPLEVBQUU7Z0JBQ2xDTyxTQUFTLENBQUNJLEtBQUtYLE9BQU8sQ0FBQ1ksT0FBTyxLQUFLRCxLQUFLWixTQUFTLENBQUNhLE9BQU8sRUFBQyxJQUFNLFFBQU8sS0FBSyxFQUFDO1lBQy9FO1FBQ0Y7UUFFQXFELE9BQU9jLElBQUksQ0FBQztZQUNWTCxPQUFPRjtZQUNQdEI7WUFDQXpEO1lBQ0FhLE9BQU9zRSxZQUFZRSxJQUFJLENBQUNoRixrQkFBa0IsSUFBSTtZQUM5Q1M7UUFDRjtJQUNGO0lBRUEsT0FBTzBEO0FBQ1QiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lem0zL0RvY3VtZW50cy9kZXYvY2VuY29wIDIuMC9hcHAvYXBpL3JlcG9ydHMvcm91dGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlcXVlc3QsIE5leHRSZXNwb25zZSB9IGZyb20gJ25leHQvc2VydmVyJ1xuaW1wb3J0IHsgZ2V0VG9rZW4gfSBmcm9tICduZXh0LWF1dGgvand0J1xuaW1wb3J0IHsgcHJpc21hIH0gZnJvbSAnQC9saWIvcHJpc21hJ1xuaW1wb3J0IHsgUm9sZSwgU3RhZ2UsIFRhc2tTdGF0dXMgfSBmcm9tICdAcHJpc21hL2NsaWVudCdcbmltcG9ydCB7IFJlcG9ydEZpbHRlcnMgfSBmcm9tICdAL3R5cGVzL2FwaSdcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChyZXF1ZXN0OiBOZXh0UmVxdWVzdCkge1xuICB0cnkge1xuICAgIGNvbnN0IHRva2VuID0gYXdhaXQgZ2V0VG9rZW4oeyByZXE6IHJlcXVlc3QgfSlcbiAgICBpZiAoIXRva2VuKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBtZXNzYWdlOiAnTm8gYXV0b3JpemFkbycgfSwgeyBzdGF0dXM6IDQwMSB9KVxuICAgIH1cblxuICAgIGNvbnN0IHsgc2VhcmNoUGFyYW1zIH0gPSBuZXcgVVJMKHJlcXVlc3QudXJsKVxuICAgIGNvbnN0IHN0YXJ0RGF0ZSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3N0YXJ0RGF0ZScpXG4gICAgY29uc3QgZW5kRGF0ZSA9IHNlYXJjaFBhcmFtcy5nZXQoJ2VuZERhdGUnKVxuICAgIGNvbnN0IHByb2plY3RJZCA9IHNlYXJjaFBhcmFtcy5nZXQoJ3Byb2plY3RJZCcpXG4gICAgY29uc3QgdXNlcklkID0gc2VhcmNoUGFyYW1zLmdldCgndXNlcklkJylcbiAgICBjb25zdCBzdGFnZSA9IHNlYXJjaFBhcmFtcy5nZXQoJ3N0YWdlJylcbiAgICBjb25zdCBzdGF0dXMgPSBzZWFyY2hQYXJhbXMuZ2V0KCdzdGF0dXMnKVxuXG4gICAgLy8gVmFsaWRhciBmZWNoYXNcbiAgICBjb25zdCBzdGFydCA9IHN0YXJ0RGF0ZSA/IG5ldyBEYXRlKHN0YXJ0RGF0ZSkgOiBuZXcgRGF0ZShEYXRlLm5vdygpIC0gMzAgKiAyNCAqIDYwICogNjAgKiAxMDAwKVxuICAgIGNvbnN0IGVuZCA9IGVuZERhdGUgPyBuZXcgRGF0ZShlbmREYXRlKSA6IG5ldyBEYXRlKClcbiAgICBcbiAgICBpZiAoc3RhcnQgPiBlbmQpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IG1lc3NhZ2U6ICdMYSBmZWNoYSBkZSBpbmljaW8gZGViZSBzZXIgYW50ZXJpb3IgYSBsYSBmZWNoYSBkZSBmaW4nIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG5cbiAgICAvLyBDb25zdHJ1aXIgZmlsdHJvcyBiYXNlXG4gICAgY29uc3QgYmFzZUZpbHRlcnM6IFJlcG9ydEZpbHRlcnMgPSB7XG4gICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgZ3RlOiBzdGFydCxcbiAgICAgICAgbHRlOiBlbmRcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBGaWx0cm9zIGFkaWNpb25hbGVzXG4gICAgaWYgKHByb2plY3RJZCkgYmFzZUZpbHRlcnMucHJvamVjdElkID0gcHJvamVjdElkXG4gICAgaWYgKHN0YWdlKSBiYXNlRmlsdGVycy5zdGFnZSA9IHN0YWdlIGFzIFN0YWdlXG4gICAgaWYgKHN0YXR1cykgYmFzZUZpbHRlcnMuc3RhdHVzID0gc3RhdHVzIGFzIFRhc2tTdGF0dXNcbiAgICBcbiAgICAvLyBTaSBlcyBlbXBsZWFkbywgc29sbyBwdWVkZSB2ZXIgc3VzIHByb3BpYXMgdGFyZWFzXG4gICAgaWYgKHRva2VuLnJvbGUgPT09IFJvbGUuRU1QTE9ZRUUpIHtcbiAgICAgIGJhc2VGaWx0ZXJzLmVtcGxveWVlSWQgPSB0b2tlbi5zdWJcbiAgICB9IGVsc2UgaWYgKHVzZXJJZCkge1xuICAgICAgYmFzZUZpbHRlcnMuZW1wbG95ZWVJZCA9IHVzZXJJZFxuICAgIH1cblxuICAgIC8vIDEuIFByb2R1Y3RpdmlkYWQgZGlhcmlhXG4gICAgY29uc3QgZGFpbHlQcm9kdWN0aXZpdHkgPSBhd2FpdCBnZXREYWlseVByb2R1Y3Rpdml0eShzdGFydCwgZW5kLCBiYXNlRmlsdGVycylcblxuICAgIC8vIDIuIFRhcmVhcyBwb3IgZXRhcGFcbiAgICBjb25zdCB0YXNrc0J5U3RhZ2UgPSBhd2FpdCBnZXRUYXNrc0J5U3RhZ2UoYmFzZUZpbHRlcnMpXG5cbiAgICAvLyAzLiBUYXJlYXMgcG9yIGVzdGFkb1xuICAgIGNvbnN0IHRhc2tzQnlTdGF0dXMgPSBhd2FpdCBnZXRUYXNrc0J5U3RhdHVzKGJhc2VGaWx0ZXJzKVxuXG4gICAgLy8gNC4gUHJvZHVjdGl2aWRhZCBwb3IgdXN1YXJpb1xuICAgIGNvbnN0IHVzZXJQcm9kdWN0aXZpdHkgPSBhd2FpdCBnZXRVc2VyUHJvZHVjdGl2aXR5KHN0YXJ0LCBlbmQsIGJhc2VGaWx0ZXJzLCB0b2tlbi5yb2xlIGFzIHN0cmluZylcblxuICAgIC8vIDUuIFByb2dyZXNvIGRlIHByb3llY3Rvc1xuICAgIGNvbnN0IHByb2plY3RQcm9ncmVzcyA9IGF3YWl0IGdldFByb2plY3RQcm9ncmVzcyhiYXNlRmlsdGVycywgdG9rZW4ucm9sZSBhcyBzdHJpbmcpXG5cbiAgICAvLyA2LiBVc28gZGUgZXNjw6FuZXJlc1xuICAgIGNvbnN0IHNjYW5uZXJVc2FnZSA9IGF3YWl0IGdldFNjYW5uZXJVc2FnZShzdGFydCwgZW5kLCBiYXNlRmlsdGVycylcblxuICAgIC8vIDcuIFRlbmRlbmNpYXMgbWVuc3VhbGVzXG4gICAgY29uc3QgbW9udGhseVRyZW5kcyA9IGF3YWl0IGdldE1vbnRobHlUcmVuZHMoc3RhcnQsIGVuZCwgYmFzZUZpbHRlcnMpXG5cbiAgICBjb25zdCByZXBvcnREYXRhID0ge1xuICAgICAgZGFpbHlQcm9kdWN0aXZpdHksXG4gICAgICB0YXNrc0J5U3RhZ2UsXG4gICAgICB0YXNrc0J5U3RhdHVzLFxuICAgICAgdXNlclByb2R1Y3Rpdml0eSxcbiAgICAgIHByb2plY3RQcm9ncmVzcyxcbiAgICAgIHNjYW5uZXJVc2FnZSxcbiAgICAgIG1vbnRobHlUcmVuZHNcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVwb3J0RGF0YSlcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBhbCBnZW5lcmFyIHJlcG9ydGU6JywgZXJyb3IpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgbWVzc2FnZTogJ0Vycm9yIGludGVybm8gZGVsIHNlcnZpZG9yJyB9LCB7IHN0YXR1czogNTAwIH0pXG4gIH1cbn1cblxuLy8gRnVuY2nDs24gcGFyYSBvYnRlbmVyIHByb2R1Y3RpdmlkYWQgZGlhcmlhXG5hc3luYyBmdW5jdGlvbiBnZXREYWlseVByb2R1Y3Rpdml0eShzdGFydDogRGF0ZSwgZW5kOiBEYXRlLCBmaWx0ZXJzOiBSZXBvcnRGaWx0ZXJzKSB7XG4gIGNvbnN0IHRhc2tzID0gYXdhaXQgcHJpc21hLnRhc2tSZWNvcmQuZmluZE1hbnkoe1xuICAgIHdoZXJlOiB7XG4gICAgICAuLi5maWx0ZXJzLFxuICAgICAgc3RhdHVzOiAnQ09NUExFVEVEJ1xuICAgIH0sXG4gICAgc2VsZWN0OiB7XG4gICAgICBjcmVhdGVkQXQ6IHRydWUsXG4gICAgICBkb2N1bWVudHNQcm9jZXNzZWQ6IHRydWUsXG4gICAgICBzdGFydFRpbWU6IHRydWUsXG4gICAgICBlbmRUaW1lOiB0cnVlXG4gICAgfVxuICB9KVxuXG4gIC8vIEFncnVwYXIgcG9yIGTDrWFcbiAgY29uc3QgZGFpbHlEYXRhOiB7IFtrZXk6IHN0cmluZ106IHsgdGFza3M6IG51bWJlcjsgcGFnZXM6IG51bWJlcjsgaG91cnM6IG51bWJlciB9IH0gPSB7fVxuICBcbiAgLy8gSW5pY2lhbGl6YXIgdG9kb3MgbG9zIGTDrWFzIGVuIGVsIHJhbmdvXG4gIGNvbnN0IGN1cnJlbnREYXRlID0gbmV3IERhdGUoc3RhcnQpXG4gIHdoaWxlIChjdXJyZW50RGF0ZSA8PSBlbmQpIHtcbiAgICBjb25zdCBkYXRlS2V5ID0gY3VycmVudERhdGUudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXG4gICAgZGFpbHlEYXRhW2RhdGVLZXldID0geyB0YXNrczogMCwgcGFnZXM6IDAsIGhvdXJzOiAwIH1cbiAgICBjdXJyZW50RGF0ZS5zZXREYXRlKGN1cnJlbnREYXRlLmdldERhdGUoKSArIDEpXG4gIH1cblxuICAvLyBQcm9jZXNhciB0YXJlYXNcbiAgdGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICBjb25zdCBkYXRlS2V5ID0gdGFzay5jcmVhdGVkQXQudG9JU09TdHJpbmcoKS5zcGxpdCgnVCcpWzBdXG4gICAgaWYgKGRhaWx5RGF0YVtkYXRlS2V5XSkge1xuICAgICAgZGFpbHlEYXRhW2RhdGVLZXldLnRhc2tzICs9IDFcbiAgICAgIGRhaWx5RGF0YVtkYXRlS2V5XS5wYWdlcyArPSB0YXNrLmRvY3VtZW50c1Byb2Nlc3NlZCB8fCAwXG4gICAgICBcbiAgICAgIGlmICh0YXNrLnN0YXJ0VGltZSAmJiB0YXNrLmVuZFRpbWUpIHtcbiAgICAgICAgY29uc3QgaG91cnMgPSAodGFzay5lbmRUaW1lLmdldFRpbWUoKSAtIHRhc2suc3RhcnRUaW1lLmdldFRpbWUoKSkgLyAoMTAwMCAqIDYwICogNjApXG4gICAgICAgIGRhaWx5RGF0YVtkYXRlS2V5XS5ob3VycyArPSBob3Vyc1xuICAgICAgfVxuICAgIH1cbiAgfSlcblxuICByZXR1cm4gT2JqZWN0LmVudHJpZXMoZGFpbHlEYXRhKVxuICAgIC5tYXAoKFtkYXRlLCBkYXRhXSkgPT4gKHsgZGF0ZSwgLi4uZGF0YSB9KSlcbiAgICAuc29ydCgoYSwgYikgPT4gYS5kYXRlLmxvY2FsZUNvbXBhcmUoYi5kYXRlKSlcbn1cblxuLy8gRnVuY2nDs24gcGFyYSBvYnRlbmVyIHRhcmVhcyBwb3IgZXRhcGFcbmFzeW5jIGZ1bmN0aW9uIGdldFRhc2tzQnlTdGFnZShmaWx0ZXJzOiBSZXBvcnRGaWx0ZXJzKSB7XG4gIGNvbnN0IHN0YWdlcyA9IFsnUkVDRVBUSU9OJywgJ1BSRVBBUkFUSU9OJywgJ1NDQU5OSU5HJywgJ0lOREVYSU5HJywgJ1FVQUxJVFlfQ09OVFJPTCcsICdSRUFTU0VNQkxZJywgJ0RFTElWRVJZJ11cbiAgXG4gIGNvbnN0IHN0YWdlQ291bnRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgc3RhZ2VzLm1hcChhc3luYyAoc3RhZ2UpID0+IHtcbiAgICAgIGNvbnN0IGNvdW50ID0gYXdhaXQgcHJpc21hLnRhc2tSZWNvcmQuY291bnQoe1xuICAgICAgICB3aGVyZTogeyAuLi5maWx0ZXJzLCBzdGFnZTogc3RhZ2UgYXMgU3RhZ2UgfVxuICAgICAgfSlcbiAgICAgIHJldHVybiB7IHN0YWdlLCBjb3VudCB9XG4gICAgfSlcbiAgKVxuXG4gIGNvbnN0IHRvdGFsVGFza3MgPSBzdGFnZUNvdW50cy5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgaXRlbS5jb3VudCwgMClcbiAgXG4gIHJldHVybiBzdGFnZUNvdW50cy5tYXAoaXRlbSA9PiAoe1xuICAgIC4uLml0ZW0sXG4gICAgcGVyY2VudGFnZTogdG90YWxUYXNrcyA+IDAgPyAoaXRlbS5jb3VudCAvIHRvdGFsVGFza3MpICogMTAwIDogMFxuICB9KSlcbn1cblxuLy8gRnVuY2nDs24gcGFyYSBvYnRlbmVyIHRhcmVhcyBwb3IgZXN0YWRvXG5hc3luYyBmdW5jdGlvbiBnZXRUYXNrc0J5U3RhdHVzKGZpbHRlcnM6IFJlcG9ydEZpbHRlcnMpIHtcbiAgY29uc3Qgc3RhdHVzZXMgPSBbJ0lOX1BST0dSRVNTJywgJ0NPTVBMRVRFRCcsICdQQVVTRUQnXVxuICBcbiAgY29uc3Qgc3RhdHVzQ291bnRzID0gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgc3RhdHVzZXMubWFwKGFzeW5jIChzdGF0dXMpID0+IHtcbiAgICAgIGNvbnN0IGNvdW50ID0gYXdhaXQgcHJpc21hLnRhc2tSZWNvcmQuY291bnQoe1xuICAgICAgICB3aGVyZTogeyAuLi5maWx0ZXJzLCBzdGF0dXM6IHN0YXR1cyBhcyBUYXNrU3RhdHVzIH1cbiAgICAgIH0pXG4gICAgICByZXR1cm4geyBzdGF0dXMsIGNvdW50IH1cbiAgICB9KVxuICApXG5cbiAgY29uc3QgdG90YWxUYXNrcyA9IHN0YXR1c0NvdW50cy5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4gc3VtICsgaXRlbS5jb3VudCwgMClcbiAgXG4gIHJldHVybiBzdGF0dXNDb3VudHMubWFwKGl0ZW0gPT4gKHtcbiAgICAuLi5pdGVtLFxuICAgIHBlcmNlbnRhZ2U6IHRvdGFsVGFza3MgPiAwID8gKGl0ZW0uY291bnQgLyB0b3RhbFRhc2tzKSAqIDEwMCA6IDBcbiAgfSkpXG59XG5cbi8vIEZ1bmNpw7NuIHBhcmEgb2J0ZW5lciBwcm9kdWN0aXZpZGFkIHBvciB1c3VhcmlvXG5hc3luYyBmdW5jdGlvbiBnZXRVc2VyUHJvZHVjdGl2aXR5KHN0YXJ0OiBEYXRlLCBlbmQ6IERhdGUsIGZpbHRlcnM6IFJlcG9ydEZpbHRlcnMsIHVzZXJSb2xlOiBzdHJpbmcpIHtcbiAgLy8gU2kgZXMgZW1wbGVhZG8sIHNvbG8gbW9zdHJhciBzdXMgcHJvcGlvcyBkYXRvc1xuICBjb25zdCB1c2VyRmlsdGVyID0gdXNlclJvbGUgPT09IFJvbGUuRU1QTE9ZRUUgPyB7IGlkOiBmaWx0ZXJzLmVtcGxveWVlSWQgfSA6IHt9XG4gIFxuICBjb25zdCB1c2VycyA9IGF3YWl0IHByaXNtYS51c2VyLmZpbmRNYW55KHtcbiAgICB3aGVyZToge1xuICAgICAgLi4udXNlckZpbHRlcixcbiAgICAgIHJvbGU6IHVzZXJSb2xlID09PSBSb2xlLkVNUExPWUVFID8gUm9sZS5FTVBMT1lFRSA6IHVuZGVmaW5lZFxuICAgIH0sXG4gICAgc2VsZWN0OiB7XG4gICAgICBpZDogdHJ1ZSxcbiAgICAgIG5hbWU6IHRydWUsXG4gICAgICB0YXNrUmVjb3Jkczoge1xuICAgICAgICB3aGVyZToge1xuICAgICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgICAgZ3RlOiBzdGFydCxcbiAgICAgICAgICAgIGx0ZTogZW5kXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdGF0dXM6IFRhc2tTdGF0dXMuQ09NUExFVEVEXG4gICAgICAgIH0sXG4gICAgICAgIHNlbGVjdDoge1xuICAgICAgICAgIGRvY3VtZW50c1Byb2Nlc3NlZDogdHJ1ZSxcbiAgICAgICAgICBzdGFydFRpbWU6IHRydWUsXG4gICAgICAgICAgZW5kVGltZTogdHJ1ZVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KVxuXG4gIHJldHVybiB1c2Vycy5tYXAodXNlciA9PiB7XG4gICAgY29uc3QgdG90YWxUYXNrcyA9IHVzZXIudGFza1JlY29yZHMubGVuZ3RoXG4gICAgY29uc3QgdG90YWxQYWdlcyA9IHVzZXIudGFza1JlY29yZHMucmVkdWNlKChzdW0sIHRhc2spID0+IHN1bSArICh0YXNrLmRvY3VtZW50c1Byb2Nlc3NlZCB8fCAwKSwgMClcbiAgICBcbiAgICBsZXQgdG90YWxIb3VycyA9IDBcbiAgICB1c2VyLnRhc2tSZWNvcmRzLmZvckVhY2godGFzayA9PiB7XG4gICAgICBpZiAodGFzay5zdGFydFRpbWUgJiYgdGFzay5lbmRUaW1lKSB7XG4gICAgICAgIHRvdGFsSG91cnMgKz0gKHRhc2suZW5kVGltZS5nZXRUaW1lKCkgLSB0YXNrLnN0YXJ0VGltZS5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwKVxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgYXZnUGFnZXNQZXJIb3VyID0gdG90YWxIb3VycyA+IDAgPyB0b3RhbFBhZ2VzIC8gdG90YWxIb3VycyA6IDBcblxuICAgIHJldHVybiB7XG4gICAgICB1c2VySWQ6IHVzZXIuaWQsXG4gICAgICB1c2VyTmFtZTogdXNlci5uYW1lLFxuICAgICAgdG90YWxUYXNrcyxcbiAgICAgIHRvdGFsUGFnZXMsXG4gICAgICB0b3RhbEhvdXJzLFxuICAgICAgYXZnUGFnZXNQZXJIb3VyXG4gICAgfVxuICB9KS5maWx0ZXIodXNlciA9PiB1c2VyLnRvdGFsVGFza3MgPiAwKVxufVxuXG4vLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgcHJvZ3Jlc28gZGUgcHJveWVjdG9zXG5hc3luYyBmdW5jdGlvbiBnZXRQcm9qZWN0UHJvZ3Jlc3MoZmlsdGVyczogUmVwb3J0RmlsdGVycywgdXNlclJvbGU6IHN0cmluZykge1xuICBjb25zdCBwcm9qZWN0RmlsdGVyOiB7IGlkPzogc3RyaW5nIH0gPSB7fVxuICBcbiAgLy8gU2kgaGF5IGZpbHRybyBkZSBwcm95ZWN0byBlc3BlY8OtZmljb1xuICBpZiAoZmlsdGVycy5wcm9qZWN0SWQpIHtcbiAgICBwcm9qZWN0RmlsdGVyLmlkID0gZmlsdGVycy5wcm9qZWN0SWRcbiAgfVxuXG4gIGNvbnN0IHByb2plY3RzID0gYXdhaXQgcHJpc21hLnByb2plY3QuZmluZE1hbnkoe1xuICAgIHdoZXJlOiBwcm9qZWN0RmlsdGVyLFxuICAgIHNlbGVjdDoge1xuICAgICAgaWQ6IHRydWUsXG4gICAgICBuYW1lOiB0cnVlLFxuICAgICAgY2xpZW50TmFtZTogdHJ1ZSxcbiAgICAgIHRhc2tSZWNvcmRzOiB7XG4gICAgICAgIHdoZXJlOiB1c2VyUm9sZSA9PT0gUm9sZS5FTVBMT1lFRSA/IHsgZW1wbG95ZWVJZDogZmlsdGVycy51c2VySWQgfSA6IHt9LFxuICAgICAgICBzZWxlY3Q6IHtcbiAgICAgICAgICBzdGF0dXM6IHRydWUsXG4gICAgICAgICAgZG9jdW1lbnRzUHJvY2Vzc2VkOiB0cnVlLFxuICAgICAgICAgIHN0YXJ0VGltZTogdHJ1ZSxcbiAgICAgICAgICBlbmRUaW1lOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgcmV0dXJuIHByb2plY3RzLm1hcChwcm9qZWN0ID0+IHtcbiAgICBjb25zdCB0b3RhbFRhc2tzID0gcHJvamVjdC50YXNrUmVjb3Jkcy5sZW5ndGhcbiAgICBjb25zdCBjb21wbGV0ZWRUYXNrcyA9IHByb2plY3QudGFza1JlY29yZHMuZmlsdGVyKHRhc2sgPT4gdGFzay5zdGF0dXMgPT09IFRhc2tTdGF0dXMuQ09NUExFVEVEKS5sZW5ndGhcbiAgICBjb25zdCBwcm9ncmVzcyA9IHRvdGFsVGFza3MgPiAwID8gKGNvbXBsZXRlZFRhc2tzIC8gdG90YWxUYXNrcykgKiAxMDAgOiAwXG4gICAgY29uc3QgdG90YWxQYWdlcyA9IHByb2plY3QudGFza1JlY29yZHMucmVkdWNlKChzdW0sIHRhc2spID0+IHN1bSArICh0YXNrLmRvY3VtZW50c1Byb2Nlc3NlZCB8fCAwKSwgMClcbiAgICBcbiAgICBsZXQgYWN0dWFsSG91cnMgPSAwXG4gICAgcHJvamVjdC50YXNrUmVjb3Jkcy5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgaWYgKHRhc2suc3RhcnRUaW1lICYmIHRhc2suZW5kVGltZSkge1xuICAgICAgICBhY3R1YWxIb3VycyArPSAodGFzay5lbmRUaW1lLmdldFRpbWUoKSAtIHRhc2suc3RhcnRUaW1lLmdldFRpbWUoKSkgLyAoMTAwMCAqIDYwICogNjApXG4gICAgICB9XG4gICAgfSlcblxuICAgIHJldHVybiB7XG4gICAgICBwcm9qZWN0SWQ6IHByb2plY3QuaWQsXG4gICAgICBwcm9qZWN0TmFtZTogcHJvamVjdC5uYW1lLFxuICAgICAgY2xpZW50TmFtZTogcHJvamVjdC5jbGllbnROYW1lLFxuICAgICAgdG90YWxUYXNrcyxcbiAgICAgIGNvbXBsZXRlZFRhc2tzLFxuICAgICAgcHJvZ3Jlc3MsXG4gICAgICB0b3RhbFBhZ2VzLFxuICAgICAgZXN0aW1hdGVkSG91cnM6IDAsXG4gICAgICBhY3R1YWxIb3Vyc1xuICAgIH1cbiAgfSkuZmlsdGVyKHByb2plY3QgPT4gcHJvamVjdC50b3RhbFRhc2tzID4gMClcbn1cblxuLy8gRnVuY2nDs24gcGFyYSBvYnRlbmVyIHVzbyBkZSBlc2PDoW5lcmVzXG5hc3luYyBmdW5jdGlvbiBnZXRTY2FubmVyVXNhZ2Uoc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgZmlsdGVyczogUmVwb3J0RmlsdGVycykge1xuICBjb25zdCBzY2FubmVycyA9IGF3YWl0IHByaXNtYS5zY2FubmVyLmZpbmRNYW55KHtcbiAgICBzZWxlY3Q6IHtcbiAgICAgIGlkOiB0cnVlLFxuICAgICAgbmFtZTogdHJ1ZSxcbiAgICAgIHRhc2tSZWNvcmRzOiB7XG4gICAgICAgIHdoZXJlOiB7XG4gICAgICAgICAgY3JlYXRlZEF0OiB7XG4gICAgICAgICAgICBndGU6IHN0YXJ0LFxuICAgICAgICAgICAgbHRlOiBlbmRcbiAgICAgICAgICB9LFxuICAgICAgICAgIHN0YXR1czogVGFza1N0YXR1cy5DT01QTEVURURcbiAgICAgICAgfSxcbiAgICAgICAgc2VsZWN0OiB7XG4gICAgICAgICAgZG9jdW1lbnRzUHJvY2Vzc2VkOiB0cnVlLFxuICAgICAgICAgIHN0YXJ0VGltZTogdHJ1ZSxcbiAgICAgICAgICBlbmRUaW1lOiB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgY29uc3QgdG90YWxIb3Vyc0luUGVyaW9kID0gKGVuZC5nZXRUaW1lKCkgLSBzdGFydC5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwKVxuXG4gIHJldHVybiBzY2FubmVycy5tYXAoc2Nhbm5lciA9PiB7XG4gICAgY29uc3QgdG90YWxUYXNrcyA9IHNjYW5uZXIudGFza1JlY29yZHMubGVuZ3RoXG4gICAgY29uc3QgdG90YWxQYWdlcyA9IHNjYW5uZXIudGFza1JlY29yZHMucmVkdWNlKChzdW0sIHRhc2spID0+IHN1bSArICh0YXNrLmRvY3VtZW50c1Byb2Nlc3NlZCB8fCAwKSwgMClcbiAgICBcbiAgICBsZXQgdG90YWxIb3VycyA9IDBcbiAgICBzY2FubmVyLnRhc2tSZWNvcmRzLmZvckVhY2godGFzayA9PiB7XG4gICAgICBpZiAodGFzay5zdGFydFRpbWUgJiYgdGFzay5lbmRUaW1lKSB7XG4gICAgICAgIHRvdGFsSG91cnMgKz0gKHRhc2suZW5kVGltZS5nZXRUaW1lKCkgLSB0YXNrLnN0YXJ0VGltZS5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwKVxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgY29uc3QgdXRpbGl6YXRpb25SYXRlID0gdG90YWxIb3Vyc0luUGVyaW9kID4gMCA/ICh0b3RhbEhvdXJzIC8gdG90YWxIb3Vyc0luUGVyaW9kKSAqIDEwMCA6IDBcblxuICAgIHJldHVybiB7XG4gICAgICBzY2FubmVySWQ6IHNjYW5uZXIuaWQsXG4gICAgICBzY2FubmVyTmFtZTogc2Nhbm5lci5uYW1lLFxuICAgICAgdG90YWxUYXNrcyxcbiAgICAgIHRvdGFsUGFnZXMsXG4gICAgICB0b3RhbEhvdXJzLFxuICAgICAgdXRpbGl6YXRpb25SYXRlXG4gICAgfVxuICB9KS5maWx0ZXIoc2Nhbm5lciA9PiBzY2FubmVyLnRvdGFsVGFza3MgPiAwKVxufVxuXG4vLyBGdW5jacOzbiBwYXJhIG9idGVuZXIgdGVuZGVuY2lhcyBtZW5zdWFsZXNcbmFzeW5jIGZ1bmN0aW9uIGdldE1vbnRobHlUcmVuZHMoc3RhcnQ6IERhdGUsIGVuZDogRGF0ZSwgZmlsdGVyczogUmVwb3J0RmlsdGVycykge1xuICAvLyBPYnRlbmVyIGRhdG9zIGRlIGxvcyDDumx0aW1vcyAxMiBtZXNlc1xuICBjb25zdCBtb250aHNCYWNrID0gMTJcbiAgY29uc3QgdHJlbmRzID0gW11cbiAgXG4gIGZvciAobGV0IGkgPSBtb250aHNCYWNrIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICBjb25zdCBtb250aFN0YXJ0ID0gbmV3IERhdGUoKVxuICAgIG1vbnRoU3RhcnQuc2V0TW9udGgobW9udGhTdGFydC5nZXRNb250aCgpIC0gaSlcbiAgICBtb250aFN0YXJ0LnNldERhdGUoMSlcbiAgICBtb250aFN0YXJ0LnNldEhvdXJzKDAsIDAsIDAsIDApXG4gICAgXG4gICAgY29uc3QgbW9udGhFbmQgPSBuZXcgRGF0ZShtb250aFN0YXJ0KVxuICAgIG1vbnRoRW5kLnNldE1vbnRoKG1vbnRoRW5kLmdldE1vbnRoKCkgKyAxKVxuICAgIG1vbnRoRW5kLnNldERhdGUoMClcbiAgICBtb250aEVuZC5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpXG4gICAgXG4gICAgY29uc3QgbW9udGhOYW1lID0gbW9udGhTdGFydC50b0xvY2FsZURhdGVTdHJpbmcoJ2VzLUVTJywgeyBtb250aDogJ3Nob3J0JywgeWVhcjogJ251bWVyaWMnIH0pXG4gICAgXG4gICAgLy8gUHJveWVjdG9zIGNyZWFkb3MgZW4gZWwgbWVzXG4gICAgY29uc3QgcHJvamVjdHMgPSBhd2FpdCBwcmlzbWEucHJvamVjdC5jb3VudCh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgICBndGU6IG1vbnRoU3RhcnQsXG4gICAgICAgICAgbHRlOiBtb250aEVuZFxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSlcbiAgICBcbiAgICAvLyBUYXJlYXMgY29tcGxldGFkYXMgZW4gZWwgbWVzXG4gICAgY29uc3QgdGFza3MgPSBhd2FpdCBwcmlzbWEudGFza1JlY29yZC5jb3VudCh7XG4gICAgICB3aGVyZToge1xuICAgICAgICBjcmVhdGVkQXQ6IHtcbiAgICAgICAgICBndGU6IG1vbnRoU3RhcnQsXG4gICAgICAgICAgbHRlOiBtb250aEVuZFxuICAgICAgICB9LFxuICAgICAgICBzdGF0dXM6ICdDT01QTEVURUQnXG4gICAgICB9XG4gICAgfSlcbiAgICBcbiAgICAvLyBQw6FnaW5hcyBwcm9jZXNhZGFzIGVuIGVsIG1lc1xuICAgIGNvbnN0IHBhZ2VzUmVzdWx0ID0gYXdhaXQgcHJpc21hLnRhc2tSZWNvcmQuYWdncmVnYXRlKHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgIGd0ZTogbW9udGhTdGFydCxcbiAgICAgICAgICBsdGU6IG1vbnRoRW5kXG4gICAgICAgIH0sXG4gICAgICAgIHN0YXR1czogJ0NPTVBMRVRFRCdcbiAgICAgIH0sXG4gICAgICBfc3VtOiB7XG4gICAgICAgIGRvY3VtZW50c1Byb2Nlc3NlZDogdHJ1ZVxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgLy8gSG9yYXMgdHJhYmFqYWRhcyBlbiBlbCBtZXNcbiAgICBjb25zdCBjb21wbGV0ZWRUYXNrcyA9IGF3YWl0IHByaXNtYS50YXNrUmVjb3JkLmZpbmRNYW55KHtcbiAgICAgIHdoZXJlOiB7XG4gICAgICAgIGNyZWF0ZWRBdDoge1xuICAgICAgICAgIGd0ZTogbW9udGhTdGFydCxcbiAgICAgICAgICBsdGU6IG1vbnRoRW5kXG4gICAgICAgIH0sXG4gICAgICAgIHN0YXR1czogJ0NPTVBMRVRFRCdcbiAgICAgIH0sXG4gICAgICBzZWxlY3Q6IHtcbiAgICAgICAgc3RhcnRUaW1lOiB0cnVlLFxuICAgICAgICBlbmRUaW1lOiB0cnVlXG4gICAgICB9XG4gICAgfSlcbiAgICBcbiAgICBsZXQgaG91cnMgPSAwXG4gICAgY29tcGxldGVkVGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgIGlmICh0YXNrLnN0YXJ0VGltZSAmJiB0YXNrLmVuZFRpbWUpIHtcbiAgICAgICAgaG91cnMgKz0gKHRhc2suZW5kVGltZS5nZXRUaW1lKCkgLSB0YXNrLnN0YXJ0VGltZS5nZXRUaW1lKCkpIC8gKDEwMDAgKiA2MCAqIDYwKVxuICAgICAgfVxuICAgIH0pXG4gICAgXG4gICAgdHJlbmRzLnB1c2goe1xuICAgICAgbW9udGg6IG1vbnRoTmFtZSxcbiAgICAgIHByb2plY3RzLFxuICAgICAgdGFza3MsXG4gICAgICBwYWdlczogcGFnZXNSZXN1bHQuX3N1bS5kb2N1bWVudHNQcm9jZXNzZWQgfHwgMCxcbiAgICAgIGhvdXJzXG4gICAgfSlcbiAgfVxuICBcbiAgcmV0dXJuIHRyZW5kc1xufSJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRUb2tlbiIsInByaXNtYSIsIlJvbGUiLCJUYXNrU3RhdHVzIiwiR0VUIiwicmVxdWVzdCIsInRva2VuIiwicmVxIiwianNvbiIsIm1lc3NhZ2UiLCJzdGF0dXMiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJzdGFydERhdGUiLCJnZXQiLCJlbmREYXRlIiwicHJvamVjdElkIiwidXNlcklkIiwic3RhZ2UiLCJzdGFydCIsIkRhdGUiLCJub3ciLCJlbmQiLCJiYXNlRmlsdGVycyIsImNyZWF0ZWRBdCIsImd0ZSIsImx0ZSIsInJvbGUiLCJFTVBMT1lFRSIsImVtcGxveWVlSWQiLCJzdWIiLCJkYWlseVByb2R1Y3Rpdml0eSIsImdldERhaWx5UHJvZHVjdGl2aXR5IiwidGFza3NCeVN0YWdlIiwiZ2V0VGFza3NCeVN0YWdlIiwidGFza3NCeVN0YXR1cyIsImdldFRhc2tzQnlTdGF0dXMiLCJ1c2VyUHJvZHVjdGl2aXR5IiwiZ2V0VXNlclByb2R1Y3Rpdml0eSIsInByb2plY3RQcm9ncmVzcyIsImdldFByb2plY3RQcm9ncmVzcyIsInNjYW5uZXJVc2FnZSIsImdldFNjYW5uZXJVc2FnZSIsIm1vbnRobHlUcmVuZHMiLCJnZXRNb250aGx5VHJlbmRzIiwicmVwb3J0RGF0YSIsImVycm9yIiwiY29uc29sZSIsImZpbHRlcnMiLCJ0YXNrcyIsInRhc2tSZWNvcmQiLCJmaW5kTWFueSIsIndoZXJlIiwic2VsZWN0IiwiZG9jdW1lbnRzUHJvY2Vzc2VkIiwic3RhcnRUaW1lIiwiZW5kVGltZSIsImRhaWx5RGF0YSIsImN1cnJlbnREYXRlIiwiZGF0ZUtleSIsInRvSVNPU3RyaW5nIiwic3BsaXQiLCJwYWdlcyIsImhvdXJzIiwic2V0RGF0ZSIsImdldERhdGUiLCJmb3JFYWNoIiwidGFzayIsImdldFRpbWUiLCJPYmplY3QiLCJlbnRyaWVzIiwibWFwIiwiZGF0ZSIsImRhdGEiLCJzb3J0IiwiYSIsImIiLCJsb2NhbGVDb21wYXJlIiwic3RhZ2VzIiwic3RhZ2VDb3VudHMiLCJQcm9taXNlIiwiYWxsIiwiY291bnQiLCJ0b3RhbFRhc2tzIiwicmVkdWNlIiwic3VtIiwiaXRlbSIsInBlcmNlbnRhZ2UiLCJzdGF0dXNlcyIsInN0YXR1c0NvdW50cyIsInVzZXJSb2xlIiwidXNlckZpbHRlciIsImlkIiwidXNlcnMiLCJ1c2VyIiwidW5kZWZpbmVkIiwibmFtZSIsInRhc2tSZWNvcmRzIiwiQ09NUExFVEVEIiwibGVuZ3RoIiwidG90YWxQYWdlcyIsInRvdGFsSG91cnMiLCJhdmdQYWdlc1BlckhvdXIiLCJ1c2VyTmFtZSIsImZpbHRlciIsInByb2plY3RGaWx0ZXIiLCJwcm9qZWN0cyIsInByb2plY3QiLCJjbGllbnROYW1lIiwiY29tcGxldGVkVGFza3MiLCJwcm9ncmVzcyIsImFjdHVhbEhvdXJzIiwicHJvamVjdE5hbWUiLCJlc3RpbWF0ZWRIb3VycyIsInNjYW5uZXJzIiwic2Nhbm5lciIsInRvdGFsSG91cnNJblBlcmlvZCIsInV0aWxpemF0aW9uUmF0ZSIsInNjYW5uZXJJZCIsInNjYW5uZXJOYW1lIiwibW9udGhzQmFjayIsInRyZW5kcyIsImkiLCJtb250aFN0YXJ0Iiwic2V0TW9udGgiLCJnZXRNb250aCIsInNldEhvdXJzIiwibW9udGhFbmQiLCJtb250aE5hbWUiLCJ0b0xvY2FsZURhdGVTdHJpbmciLCJtb250aCIsInllYXIiLCJwYWdlc1Jlc3VsdCIsImFnZ3JlZ2F0ZSIsIl9zdW0iLCJwdXNoIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/reports/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        'query'\n    ] : 0\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvcHJpc21hLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE2QztBQUU3QyxNQUFNQyxrQkFBa0JDO0FBSWpCLE1BQU1DLFNBQ1hGLGdCQUFnQkUsTUFBTSxJQUN0QixJQUFJSCx3REFBWUEsQ0FBQztJQUNmSSxLQUFLQyxLQUFzQyxHQUFHO1FBQUM7S0FBUSxHQUFHLENBQUU7QUFDOUQsR0FBRTtBQUVKLElBQUlBLElBQXFDLEVBQUVKLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL1VzZXJzL2V6bTMvRG9jdW1lbnRzL2Rldi9jZW5jb3AgMi4wL2xpYi9wcmlzbWEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPVxuICBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/XG4gIG5ldyBQcmlzbWFDbGllbnQoe1xuICAgIGxvZzogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBbJ3F1ZXJ5J10gOiBbXSxcbiAgfSlcblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIGdsb2JhbEZvclByaXNtYS5wcmlzbWEgPSBwcmlzbWEiXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsVGhpcyIsInByaXNtYSIsImxvZyIsInByb2Nlc3MiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/prisma.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Freports%2Froute&page=%2Fapi%2Freports%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freports%2Froute.ts&appDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Freports%2Froute&page=%2Fapi%2Freports%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freports%2Froute.ts&appDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   handler: () => (/* binding */ handler),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/server/request-meta */ \"(rsc)/./node_modules/next/dist/server/request-meta.js\");\n/* harmony import */ var next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(rsc)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/shared/lib/router/utils/app-paths */ \"next/dist/shared/lib/router/utils/app-paths\");\n/* harmony import */ var next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/base-http/node */ \"(rsc)/./node_modules/next/dist/server/base-http/node.js\");\n/* harmony import */ var next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! next/dist/server/web/spec-extension/adapters/next-request */ \"(rsc)/./node_modules/next/dist/server/web/spec-extension/adapters/next-request.js\");\n/* harmony import */ var next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(rsc)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! next/dist/server/instrumentation/utils */ \"(rsc)/./node_modules/next/dist/server/instrumentation/utils.js\");\n/* harmony import */ var next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! next/dist/server/send-response */ \"(rsc)/./node_modules/next/dist/server/send-response.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! next/dist/server/web/utils */ \"(rsc)/./node_modules/next/dist/server/web/utils.js\");\n/* harmony import */ var next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! next/dist/server/lib/cache-control */ \"(rsc)/./node_modules/next/dist/server/lib/cache-control.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! next/dist/lib/constants */ \"(rsc)/./node_modules/next/dist/lib/constants.js\");\n/* harmony import */ var next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! next/dist/shared/lib/no-fallback-error.external */ \"next/dist/shared/lib/no-fallback-error.external\");\n/* harmony import */ var next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! next/dist/server/response-cache */ \"(rsc)/./node_modules/next/dist/server/response-cache/index.js\");\n/* harmony import */ var next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _Users_ezm3_Documents_dev_cencop_2_0_app_api_reports_route_ts__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./app/api/reports/route.ts */ \"(rsc)/./app/api/reports/route.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/reports/route\",\n        pathname: \"/api/reports\",\n        filename: \"route\",\n        bundlePath: \"app/api/reports/route\"\n    },\n    distDir: \".next\" || 0,\n    relativeProjectDir:  false || '',\n    resolvedPagePath: \"/Users/ezm3/Documents/dev/cencop 2.0/app/api/reports/route.ts\",\n    nextConfigOutput,\n    userland: _Users_ezm3_Documents_dev_cencop_2_0_app_api_reports_route_ts__WEBPACK_IMPORTED_MODULE_16__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\nasync function handler(req, res, ctx) {\n    var _nextConfig_experimental;\n    let srcPage = \"/api/reports/route\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {} else if (srcPage === '/index') {\n        // we always normalize /index specifically\n        srcPage = '/';\n    }\n    const multiZoneDraftMode = false;\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage,\n        multiZoneDraftMode\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return null;\n    }\n    const { buildId, params, nextConfig, isDraftMode, prerenderManifest, routerServerContext, isOnDemandRevalidate, revalidateOnlyGenerated, resolvedPathname } = prepareResult;\n    const normalizedSrcPage = (0,next_dist_shared_lib_router_utils_app_paths__WEBPACK_IMPORTED_MODULE_5__.normalizeAppPath)(srcPage);\n    let isIsr = Boolean(prerenderManifest.dynamicRoutes[normalizedSrcPage] || prerenderManifest.routes[resolvedPathname]);\n    if (isIsr && !isDraftMode) {\n        const isPrerendered = Boolean(prerenderManifest.routes[resolvedPathname]);\n        const prerenderInfo = prerenderManifest.dynamicRoutes[normalizedSrcPage];\n        if (prerenderInfo) {\n            if (prerenderInfo.fallback === false && !isPrerendered) {\n                throw new next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError();\n            }\n        }\n    }\n    let cacheKey = null;\n    if (isIsr && !routeModule.isDev && !isDraftMode) {\n        cacheKey = resolvedPathname;\n        // ensure /index and / is normalized to one key\n        cacheKey = cacheKey === '/index' ? '/' : cacheKey;\n    }\n    const supportsDynamicResponse = // If we're in development, we always support dynamic HTML\n    routeModule.isDev === true || // If this is not SSG or does not have static paths, then it supports\n    // dynamic HTML.\n    !isIsr;\n    // This is a revalidation request if the request is for a static\n    // page and it is not being resumed from a postponed render and\n    // it is not a dynamic RSC request then it is a revalidation\n    // request.\n    const isRevalidate = isIsr && !supportsDynamicResponse;\n    const method = req.method || 'GET';\n    const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.getTracer)();\n    const activeSpan = tracer.getActiveScopeSpan();\n    const context = {\n        params,\n        prerenderManifest,\n        renderOpts: {\n            experimental: {\n                cacheComponents: Boolean(nextConfig.experimental.cacheComponents),\n                authInterrupts: Boolean(nextConfig.experimental.authInterrupts)\n            },\n            supportsDynamicResponse,\n            incrementalCache: (0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'incrementalCache'),\n            cacheLifeProfiles: (_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : _nextConfig_experimental.cacheLife,\n            isRevalidate,\n            waitUntil: ctx.waitUntil,\n            onClose: (cb)=>{\n                res.on('close', cb);\n            },\n            onAfterTaskError: undefined,\n            onInstrumentationRequestError: (error, _request, errorContext)=>routeModule.onRequestError(req, error, errorContext, routerServerContext)\n        },\n        sharedContext: {\n            buildId\n        }\n    };\n    const nodeNextReq = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextRequest(req);\n    const nodeNextRes = new next_dist_server_base_http_node__WEBPACK_IMPORTED_MODULE_6__.NodeNextResponse(res);\n    const nextReq = next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.NextRequestAdapter.fromNodeNextRequest(nodeNextReq, (0,next_dist_server_web_spec_extension_adapters_next_request__WEBPACK_IMPORTED_MODULE_7__.signalFromNodeResponse)(res));\n    try {\n        const invokeRouteModule = async (span)=>{\n            return routeModule.handle(nextReq, context).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        };\n        const handleResponse = async (currentSpan)=>{\n            var _cacheEntry_value;\n            const responseGenerator = async ({ previousCacheEntry })=>{\n                try {\n                    if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isOnDemandRevalidate && revalidateOnlyGenerated && !previousCacheEntry) {\n                        res.statusCode = 404;\n                        // on-demand revalidate always sets this header\n                        res.setHeader('x-nextjs-cache', 'REVALIDATED');\n                        res.end('This page could not be found');\n                        return null;\n                    }\n                    const response = await invokeRouteModule(currentSpan);\n                    req.fetchMetrics = context.renderOpts.fetchMetrics;\n                    let pendingWaitUntil = context.renderOpts.pendingWaitUntil;\n                    // Attempt using provided waitUntil if available\n                    // if it's not we fallback to sendResponse's handling\n                    if (pendingWaitUntil) {\n                        if (ctx.waitUntil) {\n                            ctx.waitUntil(pendingWaitUntil);\n                            pendingWaitUntil = undefined;\n                        }\n                    }\n                    const cacheTags = context.renderOpts.collectedTags;\n                    // If the request is for a static response, we can cache it so long\n                    // as it's not edge.\n                    if (isIsr) {\n                        const blob = await response.blob();\n                        // Copy the headers from the response.\n                        const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.toNodeOutgoingHttpHeaders)(response.headers);\n                        if (cacheTags) {\n                            headers[next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n                        }\n                        if (!headers['content-type'] && blob.type) {\n                            headers['content-type'] = blob.type;\n                        }\n                        const revalidate = typeof context.renderOpts.collectedRevalidate === 'undefined' || context.renderOpts.collectedRevalidate >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? false : context.renderOpts.collectedRevalidate;\n                        const expire = typeof context.renderOpts.collectedExpire === 'undefined' || context.renderOpts.collectedExpire >= next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.INFINITE_CACHE ? undefined : context.renderOpts.collectedExpire;\n                        // Create the cache entry for the response.\n                        const cacheEntry = {\n                            value: {\n                                kind: next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE,\n                                status: response.status,\n                                body: Buffer.from(await blob.arrayBuffer()),\n                                headers\n                            },\n                            cacheControl: {\n                                revalidate,\n                                expire\n                            }\n                        };\n                        return cacheEntry;\n                    } else {\n                        // send response without caching if not ISR\n                        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, response, context.renderOpts.pendingWaitUntil);\n                        return null;\n                    }\n                } catch (err) {\n                    // if this is a background revalidate we need to report\n                    // the request error here as it won't be bubbled\n                    if (previousCacheEntry == null ? void 0 : previousCacheEntry.isStale) {\n                        await routeModule.onRequestError(req, err, {\n                            routerKind: 'App Router',\n                            routePath: srcPage,\n                            routeType: 'route',\n                            revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                                isRevalidate,\n                                isOnDemandRevalidate\n                            })\n                        }, routerServerContext);\n                    }\n                    throw err;\n                }\n            };\n            const cacheEntry = await routeModule.handleResponse({\n                req,\n                nextConfig,\n                cacheKey,\n                routeKind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n                isFallback: false,\n                prerenderManifest,\n                isRoutePPREnabled: false,\n                isOnDemandRevalidate,\n                revalidateOnlyGenerated,\n                responseGenerator,\n                waitUntil: ctx.waitUntil\n            });\n            // we don't create a cacheEntry for ISR\n            if (!isIsr) {\n                return null;\n            }\n            if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== next_dist_server_response_cache__WEBPACK_IMPORTED_MODULE_15__.CachedRouteKind.APP_ROUTE) {\n                var _cacheEntry_value1;\n                throw Object.defineProperty(new Error(`Invariant: app-route received invalid cache entry ${cacheEntry == null ? void 0 : (_cacheEntry_value1 = cacheEntry.value) == null ? void 0 : _cacheEntry_value1.kind}`), \"__NEXT_ERROR_CODE\", {\n                    value: \"E701\",\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n            if (!(0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode')) {\n                res.setHeader('x-nextjs-cache', isOnDemandRevalidate ? 'REVALIDATED' : cacheEntry.isMiss ? 'MISS' : cacheEntry.isStale ? 'STALE' : 'HIT');\n            }\n            // Draft mode should never be cached\n            if (isDraftMode) {\n                res.setHeader('Cache-Control', 'private, no-cache, no-store, max-age=0, must-revalidate');\n            }\n            const headers = (0,next_dist_server_web_utils__WEBPACK_IMPORTED_MODULE_11__.fromNodeOutgoingHttpHeaders)(cacheEntry.value.headers);\n            if (!((0,next_dist_server_request_meta__WEBPACK_IMPORTED_MODULE_3__.getRequestMeta)(req, 'minimalMode') && isIsr)) {\n                headers.delete(next_dist_lib_constants__WEBPACK_IMPORTED_MODULE_13__.NEXT_CACHE_TAGS_HEADER);\n            }\n            // If cache control is already set on the response we don't\n            // override it to allow users to customize it via next.config\n            if (cacheEntry.cacheControl && !res.getHeader('Cache-Control') && !headers.get('Cache-Control')) {\n                headers.set('Cache-Control', (0,next_dist_server_lib_cache_control__WEBPACK_IMPORTED_MODULE_12__.getCacheControlHeader)(cacheEntry.cacheControl));\n            }\n            await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(cacheEntry.value.body, {\n                headers,\n                status: cacheEntry.value.status || 200\n            }));\n            return null;\n        };\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await handleResponse(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_8__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_4__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, handleResponse));\n        }\n    } catch (err) {\n        // if we aren't wrapped by base-server handle here\n        if (!activeSpan && !(err instanceof next_dist_shared_lib_no_fallback_error_external__WEBPACK_IMPORTED_MODULE_14__.NoFallbackError)) {\n            await routeModule.onRequestError(req, err, {\n                routerKind: 'App Router',\n                routePath: normalizedSrcPage,\n                routeType: 'route',\n                revalidateReason: (0,next_dist_server_instrumentation_utils__WEBPACK_IMPORTED_MODULE_9__.getRevalidateReason)({\n                    isRevalidate,\n                    isOnDemandRevalidate\n                })\n            });\n        }\n        // rethrow so that we can handle serving error page\n        // If this is during static generation, throw the error again.\n        if (isIsr) throw err;\n        // Otherwise, send a 500 response.\n        await (0,next_dist_server_send_response__WEBPACK_IMPORTED_MODULE_10__.sendResponse)(nodeNextReq, nodeNextRes, new Response(null, {\n            status: 500\n        }));\n        return null;\n    }\n}\n\n//# sourceMappingURL=app-route.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Freports%2Froute&page=%2Fapi%2Freports%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freports%2Froute.ts&appDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/server/app-render/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/action-async-storage.external.js");

/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "./work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@prisma/client");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "next/dist/shared/lib/no-fallback-error.external":
/*!******************************************************************!*\
  !*** external "next/dist/shared/lib/no-fallback-error.external" ***!
  \******************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/no-fallback-error.external");

/***/ }),

/***/ "next/dist/shared/lib/router/utils/app-paths":
/*!**************************************************************!*\
  !*** external "next/dist/shared/lib/router/utils/app-paths" ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/shared/lib/router/utils/app-paths");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/uuid","vendor-chunks/@panva"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Freports%2Froute&page=%2Fapi%2Freports%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Freports%2Froute.ts&appDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fezm3%2FDocuments%2Fdev%2Fcencop%202.0&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D&isGlobalNotFoundEnabled=!")));
module.exports = __webpack_exports__;

})();